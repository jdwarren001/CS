ALGORITHM 1: Convert seconds into a time of day.

BEGIN ConvertSeconds
	seconds  <-- the number of seconds since midnight
	minutes <-- seconds / 60
	hours <-- minutes / 60
	minutes <-- minutes mod 60
	IF hours < 12 THEN
		isAM <-- true
	ELSE
		isAM <- false
		hours <-- hours - 12
	ENDIF
	IF hours equals 0 THEN
		hours <-- 12
	ENDIF
END

ALGORITHM 2: Convert a two-digit number into words

BEGIN SpeakInteger
	number <-- the two-digit number
	firstDigit <-- number / 10
	secondDigit <-- number % 10
	IF firstDigit IS 1 THEN
		CASEWHERE secondDigit IS
			0: say "ten"
		   	1: say "eleven"
		   	2: say "twelve"
		   	3: say "thirteen"
		   	4: say "fourteen"
		   	5: say "fifteen"
		   	6: say "sixteen"
		   	7: say "seventeen"
		   	8: say "eighteen"
		   	9: say "nineteen"
		ENDCASE
	ELSE
		CASEWHERE firstDigit IS
			2:	say "twenty"
			3:	say "thirty"
			4:	say "forty"
			5:	say "fifty"
			6:	say "sixty"
			7:	say "seventy"
			8:	say "eighty"
			9:	say "ninety"
		ENDCASE
		CASEWHERE secondDigit IS
		   	1: say "one"
		   	2: say "two"
		   	3: say "three"
		   	4: say "four"
		   	5: say "five"
		   	6: say "six"
		   	7: say "seven"
		   	8: say "eight"
		   	9: say "nine:
		 ENDCASE
	ENDIF
END


ALGORITHM 3: Convert a numeric date to words

BEGIN
	day <-- day of the month
	month <-- month of the year
	CASEWHERE month IS
		1:	say "january"
		2:	say "february"
		3:	say "march"
		...
		12:	say "december"
	ENDCASE
	Output the two digit number as above
	except use "first", "second" , "third", etc instead of "one",...
	and 10 becomes "tenth", 20 becomes "twentieth", and 30 becomes
	"thirtieth" only if the second digit is 0.
END
